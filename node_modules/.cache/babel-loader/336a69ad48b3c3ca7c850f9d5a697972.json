{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louii\\\\Desktop\\\\APP2\\\\cardgame\\\\src\\\\components\\\\GameGrid.js\";\nimport React from 'react';\nimport { StyleSheet, Text, View, Button, Image } from 'react-native';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport 'react-native';\nimport Card from './Card';\nimport EmptyCard from './EmptyCard';\nimport render from 'react-native-web/dist/cjs/exports/render';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GameGridV2 extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.containerAll,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: this.props.value[0].map((card, index) => {\n          if (card.name) {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              name: card.name,\n              pv: card.pv,\n              attack: card.attack,\n              img: card.img\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 32\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(EmptyCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 32\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: this.props.value[1].map((card, index) => {\n          if (card.name) {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              name: card.name,\n              pv: card.pv,\n              attack: card.attack,\n              img: card.img\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 32\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(EmptyCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 32\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: this.props.value[2].map((card, index) => {\n          if (card.name) {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              name: card.name,\n              pv: card.pv,\n              attack: card.attack,\n              img: card.img\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 32\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(EmptyCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 32\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nconst styles = StyleSheet.create({\n  containerAll: {\n    backgroundColor: \"green\",\n    // flex: 1,\n    alignItems: \"center\",\n    // ignore this - we'll come back to it\n    justifyContent: \"center\",\n    // ignore this - we'll come back to it\n    flexDirection: \"row\"\n  },\n  container: {\n    backgroundColor: \"grey\",\n    alignItems: \"center\",\n    // ignore this - we'll come back to it\n    justifyContent: \"center\",\n    // ignore this - we'll come back to it\n    flexDirection: \"column\"\n  },\n  square: {\n    backgroundColor: \"#A1C7E0\",\n    width: 60,\n    height: 80,\n    margin: 4\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","View","Button","Image","Col","Row","Grid","Card","EmptyCard","render","GameGridV2","Component","styles","containerAll","container","props","value","map","card","index","name","pv","attack","img","create","backgroundColor","alignItems","justifyContent","flexDirection","square","width","height","margin"],"sources":["C:/Users/louii/Desktop/APP2/cardgame/src/components/GameGrid.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Button, Image } from 'react-native';\r\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\r\nimport {} from 'react-native';\r\nimport Card from './Card';\r\nimport EmptyCard from './EmptyCard';\r\nimport render from 'react-native-web/dist/cjs/exports/render';\r\n\r\n\r\nexport default class GameGridV2 extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <View style={styles.containerAll}>\r\n            <View style={styles.container}>\r\n\r\n                {this.props.value[0].map((card, index) => {\r\n                    if(card.name){\r\n                        return <Card key={index} name={card.name} pv={card.pv} attack={card.attack} img={card.img}/>\r\n                    }else{\r\n                        return <EmptyCard/>\r\n                    }\r\n                })}\r\n            </View>\r\n\r\n            <View style={styles.container}>\r\n                {this.props.value[1].map((card, index) => {\r\n                    if(card.name){\r\n                        return <Card key={index} name={card.name} pv={card.pv} attack={card.attack} img={card.img}/>\r\n                    }else{\r\n                        return <EmptyCard/>\r\n                    }\r\n                })}\r\n            </View>\r\n\r\n            <View style={styles.container}>\r\n                {this.props.value[2].map((card, index) => {\r\n                    if(card.name){\r\n                        return <Card key={index} name={card.name} pv={card.pv} attack={card.attack} img={card.img}/>\r\n                    }else{\r\n                        return <EmptyCard/>\r\n                    }\r\n                })}\r\n            </View>\r\n        </View>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerAll:{\r\n        backgroundColor: \"green\",\r\n        // flex: 1,\r\n        alignItems: \"center\", // ignore this - we'll come back to it\r\n        justifyContent: \"center\", // ignore this - we'll come back to it\r\n        flexDirection: \"row\",\r\n  \r\n    },\r\n    container: {\r\n      backgroundColor: \"grey\",\r\n      alignItems: \"center\", // ignore this - we'll come back to it\r\n      justifyContent: \"center\", // ignore this - we'll come back to it\r\n      flexDirection: \"column\",\r\n    },\r\n    square: {\r\n      backgroundColor: \"#A1C7E0\",\r\n      width: 60,\r\n      height: 80,\r\n      margin: 4,\r\n    },\r\n  });"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAsD,cAAtD;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,wBAA/B;AACA,OAAe,cAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;;AAGA,eAAe,MAAMC,UAAN,SAAyBZ,KAAK,CAACa,SAA/B,CAAyC;EAEpDF,MAAM,GAAG;IACL,oBACA,QAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACC,YAApB;MAAA,wBACI,QAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,SAApB;QAAA,UAEK,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;UACtC,IAAGD,IAAI,CAACE,IAAR,EAAa;YACT,oBAAO,QAAC,IAAD;cAAkB,IAAI,EAAEF,IAAI,CAACE,IAA7B;cAAmC,EAAE,EAAEF,IAAI,CAACG,EAA5C;cAAgD,MAAM,EAAEH,IAAI,CAACI,MAA7D;cAAqE,GAAG,EAAEJ,IAAI,CAACK;YAA/E,GAAWJ,KAAX;cAAA;cAAA;cAAA;YAAA,QAAP;UACH,CAFD,MAEK;YACD,oBAAO,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA,QAAP;UACH;QACJ,CANA;MAFL;QAAA;QAAA;QAAA;MAAA,QADJ,eAYI,QAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACE,SAApB;QAAA,UACK,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;UACtC,IAAGD,IAAI,CAACE,IAAR,EAAa;YACT,oBAAO,QAAC,IAAD;cAAkB,IAAI,EAAEF,IAAI,CAACE,IAA7B;cAAmC,EAAE,EAAEF,IAAI,CAACG,EAA5C;cAAgD,MAAM,EAAEH,IAAI,CAACI,MAA7D;cAAqE,GAAG,EAAEJ,IAAI,CAACK;YAA/E,GAAWJ,KAAX;cAAA;cAAA;cAAA;YAAA,QAAP;UACH,CAFD,MAEK;YACD,oBAAO,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA,QAAP;UACH;QACJ,CANA;MADL;QAAA;QAAA;QAAA;MAAA,QAZJ,eAsBI,QAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACE,SAApB;QAAA,UACK,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;UACtC,IAAGD,IAAI,CAACE,IAAR,EAAa;YACT,oBAAO,QAAC,IAAD;cAAkB,IAAI,EAAEF,IAAI,CAACE,IAA7B;cAAmC,EAAE,EAAEF,IAAI,CAACG,EAA5C;cAAgD,MAAM,EAAEH,IAAI,CAACI,MAA7D;cAAqE,GAAG,EAAEJ,IAAI,CAACK;YAA/E,GAAWJ,KAAX;cAAA;cAAA;cAAA;YAAA,QAAP;UACH,CAFD,MAEK;YACD,oBAAO,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA,QAAP;UACH;QACJ,CANA;MADL;QAAA;QAAA;QAAA;MAAA,QAtBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAmCH;;AAtCmD;AA4CxD,MAAMP,MAAM,GAAGb,UAAU,CAACyB,MAAX,CAAkB;EAC7BX,YAAY,EAAC;IACTY,eAAe,EAAE,OADR;IAET;IACAC,UAAU,EAAE,QAHH;IAGa;IACtBC,cAAc,EAAE,QAJP;IAIiB;IAC1BC,aAAa,EAAE;EALN,CADgB;EAS7Bd,SAAS,EAAE;IACTW,eAAe,EAAE,MADR;IAETC,UAAU,EAAE,QAFH;IAEa;IACtBC,cAAc,EAAE,QAHP;IAGiB;IAC1BC,aAAa,EAAE;EAJN,CATkB;EAe7BC,MAAM,EAAE;IACNJ,eAAe,EAAE,SADX;IAENK,KAAK,EAAE,EAFD;IAGNC,MAAM,EAAE,EAHF;IAINC,MAAM,EAAE;EAJF;AAfqB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}